# Generated by Django 5.2.1 on 2025-05-15 04:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200)),
                ('category_slug', models.SlugField(unique=True)),
                ('product_count', models.PositiveIntegerField(default=0, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'indexes': [models.Index(fields=['category_slug'], name='products_pr_categor_e672ae_idx'), models.Index(fields=['category_name'], name='products_pr_categor_a36ff0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=500)),
                ('product_description', models.TextField()),
                ('key_information', models.TextField(blank=True, max_length=5000)),
                ('average_rating', models.FloatField(default=0.0, editable=False)),
                ('rating_count', models.PositiveIntegerField(default=0, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_by_seller', to=settings.AUTH_USER_MODEL)),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='products.productcategory')),
            ],
            options={
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, max_length=2000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='products.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Ratings',
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=500)),
                ('answer', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='products.product')),
            ],
            options={
                'verbose_name_plural': 'FAQs',
                'indexes': [models.Index(fields=['product', 'created_at'], name='products_fa_product_7bd281_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_name'], name='products_pr_product_097795_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['seller', 'created_at'], name='products_pr_seller__c7d447_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_category', 'created_at'], name='products_pr_product_5ea99f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(condition=models.Q(('average_rating__gte', 4)), fields=['average_rating'], name='idx_product_avg_rating_gte_4'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['product', 'score'], name='products_ra_product_1ca8f0_idx'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(condition=models.Q(('score__gte', 4)), fields=['score'], name='idx_rating_score_gte_4'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('user', 'product')},
        ),
    ]
